// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20230817133650_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("API.Entities.Login", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nameAndfamily")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("API.Entities.LohePosti", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmadGuardPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmadGuardPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmadGuardPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Armament")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmedForceMorning1")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmedForceMorning2")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmedForceMorning3")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmedGuardPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmedGuardPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArmedGuardPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("CastlePass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("CastlePass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("CastlePass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuardPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuardPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuardPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kitchen1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kitchen2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kitchen3")
                        .HasColumnType("TEXT");

                    b.Property<string>("MechanizedGuardPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("MechanizedGuardPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("MechanizedGuardPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalGuardPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalGuardPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalGuardPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostHoursPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostHoursPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostHoursPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Refuge")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShelterManager")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpringPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpringPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpringPass3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Watchman")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkshopPass1")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkshopPass2")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkshopPass3")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("LohePostis");
                });

            modelBuilder.Entity("API.Entities.Soldiers", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("departmentName")
                        .HasColumnType("TEXT");

                    b.Property<string>("entryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("fatherName")
                        .HasColumnType("TEXT");

                    b.Property<string>("firstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("healthType")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("nationalCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("personnelCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("rank")
                        .HasColumnType("TEXT");

                    b.Property<string>("serviceEndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("serviceStartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Soldiers");
                });
#pragma warning restore 612, 618
        }
    }
}
